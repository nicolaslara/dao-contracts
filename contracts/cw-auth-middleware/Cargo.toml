[package]
name = "cw-auth-middleware"
version = "0.1.0"
authors = ["Nicolas Lara <nicolaslara@gmail.com>"]
edition = "2018"

exclude = [
  # Those files are rust-optimizer artifacts. You might want to commit them for convenience but they should not be part of the source code publication.
  "contract.wasm",
  "hash.txt",
]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
crate-type = ["cdylib", "rlib"]

[features]
# for more explicit tests, cargo test --features=backtraces
backtraces = ["cosmwasm-std/backtraces"]
# use library feature to disable all instantiate/execute/query exports
library = []

[package.metadata.scripts]
optimize = """docker run --rm -v "$(pwd)":/code \
  --mount type=volume,source="$(basename "$(pwd)")_cache",target=/code/target \
  --mount type=volume,source=registry_cache,target=/usr/local/cargo/registry \
  cosmwasm/rust-optimizer:0.12.5
"""

[dependencies]
cosmwasm-std = "1.0.0"
cosmwasm-storage = "1.0.0"
cosmwasm-schema = "1.0.0"
cw-storage-plus = "0.13"
cw-utils = "0.13"
cw2 = "0.13"
cw20 = "0.13"
cw3 = "0.13"
schemars = "0.8"
serde = { version = "1.0", default-features = false, features = ["derive"] }
thiserror = { version = "1.0" }
cw-core = { version="*", path="../cw-core" }
cw-authorizations = { git="https://github.com/nicolaslara/authorizations/", package="cw-authorizations"}


[dev-dependencies]
cw-multi-test = "0.14.0"
testing = { version = "*", path = "../../packages/testing" }
whitelist = { git="https://github.com/nicolaslara/authorizations/", package="whitelist"}
message-filter = { git="https://github.com/nicolaslara/authorizations/", package="message-filter"}
satisfies-all = { git="https://github.com/nicolaslara/authorizations/", package="satisfies-all"}
satisfies-any = { git="https://github.com/nicolaslara/authorizations/", package="satisfies-any"}
